<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="anaekranButon.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAbsAAAG7ATrs4+IAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAHaElEQVR4Xu2b7U8UVxTGSfxm+A/84B/Qb9XYmNC0sU2TpoQ0MW1i0w/WosGkNjQlTZu2KWJBuyrV
        grb4inUFRUFQBEReBUTkHd1lEVYBXdAFBanKLuA+fS6yOgx3l5mdXYtsT/Lo7J3Zu/f+uHPOuXfuRAAI
        qRIrEbmtEDEphYjfWQDT7gKY9+ShIj0Ptv25GDtwGmOHc2DLPIWK41kwZ2XBdNqM+NzjiMnJQaSszmBK
        WmhU35Rj2fcliPu5BEWJRXBtuwAQAEznAALAnrNAWh5AACAAEAAIAMezAQJAjhkgAOT/Ddf5TBSVHEVc
        +TEsk/2WUUkLA9Gm81gaX46EhDI0flcKzw8XAQIAAcAAABAAio8CpUfgKTuExspDSGjKwFJZGwKRtFCP
        PsnBks2ViN1SBQcB4NsygAAQAgAoPwRUHQRqMuCoz0Asb5ElsjbpkbRQqzbWIHpTNSybq4AtlcArBID6
        v4Brf8LSnI5oWdu0Slo4nz6rw/L1daj6sgYgAPyHANC8D2hPQ5U1HctlbZ1P0kJ/WncVUZ/Xwbm+Flgo
        ANrSAUsanF17ESVrsz9JC33p06vYsK4ebgKAUQAHzgO17cCVNnacn40CuJEGdO6Fu/t3bJC13ZekhWoJ
        R7e2AakEAAKAUQBHeX7kH9Y8Y494nMtrggAAN/cA9lSkQqODlBYqJTr/cSPy114DggHgxGXgqYs1q2yc
        ZUX8XpAAoG838rVAkBYq9VEzUgkAwQCQ2wBMTrFWHybOVbO+YADo3Q3c3cWRIOmTUtJCrz5swYboJiAY
        AIqvAx4Pa1WY6LAaiLimmaCCBAD3TP59grRQ6P02RBGAOxgAantYo8rG3ewkv1NQAbh4rDYbgQUDwKAJ
        bucO39FBWrimBcs/aIWTAGAEQCLV7mCNKht9TIfHa7xh8EwxMMYytfXbgUJCMAgAzt/gHNklzxPmFAit
        aUcVAcAIgEQe2x+wNpUNjrDTHBXqPOBkPjAsuX5oALhEn2AQAIa3g62c29c5Be9eR/R7jM1GACTT0w8q
        wpzX7PeAP+gMfSVC2Tx2SEbM2EPgMs8bAfBgB+tJmZs2z/ogQt47HbAYAbCL14yOszaVtfYBO5n8zJcJ
        ZlP27pkvKWyct0gDrzcC4FEKLOrQOAvA2zcQSwAIFMA+Xj8+yZpUVtmlPxW28PfVNkln2caIYgAAniQj
        llXNBbCiCUujOuAIFMAxKzD1jDUpbIohLY/priwV1jIXaOZveFR1is82jrRAATxOhgOJL9cTXgBYbUFC
        FENPIADyb7FhrERpLo6ETH5PlgprBSDCYD0jyeTETKUK62NbAgSAp78igVWoAFjRqBfARqpKFuaY1u69
        4nsuoAeAyANqGSFcT2YqV9j9G0DLfv0AxreBPVIAWN2FZRwBHj0ANrGDrbIwR2eVwijgay4QCACRB4go
        8JjRQG2jt4EO3g46AXg4CqbXGKcBrLIgjgCgFcBmHtvHpn9/lnWzgT/SH/iaCxgBIPKAan4eYV6gticM
        rzaGSB0AMJGEOH71OYC3rCjSCuCrZubXkjDXdJ85ACOBr7lAMACIPKD6MDskCZPuUaCH12gF4E4CW0YA
        b1gQucoKl1YAZaStttJ+4GtVJhgqAN48wMH2qW2E7dcxAlyMBpERK22IIQBoBeBUzOWF58/iX0OWCoca
        gAiDvfQ1042YsYlHugBgKhExEW9aEa8HwJACwDCPZanwqwIgwqBb4YsmeKwHwLMkxEestMIUtgC2whSx
        ohPmMAZgFgAqwhWAZysqBABbGI8AmwAwFsYAxv4H8P8tEEInuL2C+TkzR/VyuBYT3xlghnmRUELtBEMW
        Bku7Zi40YJ2ce4RwBJhDmgi1StYK9NqdnpACMIU0FVYDGOB0+c4wGzb0XA5qwMlGUveEOKMc5nmlhRTA
        dCqsczJkBEAGz83nBAt4XmmhBDA9GdI7HV5EAJ5Ph/k9XQsiiwXAiwUR8Y+eJbFFNAJeLonpWRRdJABm
        L4oKaV0WXyQA2CP1cwGND0YWAwDpgxGtj8YWAQD5ozEhLQ9HX3cAPh+OCml5PP6aA/D/eFxovg0SrzOA
        eTdIeOVvi4wSwEM3O9oA/MTyX+qBpDoguZbT4BrO/S8DFtVDlCyeO3gJOEI4x0rY4WIgm+nIqQvAmULg
        7DngEs8rbaCXnSakGkKqOwlcpRqzgJYTQLuZnVbsLfIHQPMWGSF/m6SUABaa+QGgb5OUkK9tcrLnggvF
        JkalAPRvk/OKAOZslCwZ5JkFag/pu9QAAt4o6ZV6q+wX/D/TDtRy7l5HXeF9Xk81EMy1Ad6fVBOdXzMl
        nGDbXd6rd4AO6no//QJl7QM6KRvv7y7q5m2gh7LfAm5Rt1l/L9VPByic4N1uwEEN3GSHqPtdHNbUkI33
        NvWgk+d4h3ftnwOAR/J+eSUtVCrYm6XniwJ6F0V9bZEJ2mZpoWBvl38FAIK3XV4pAgjaCxMhAhCaFyaU
        CutXZrwK65emlArb1+aUEg4ybF+cVCpsX52VKSxfnvalhf36PCL+BaggxTkuDjjzAAAAAElFTkSuQmCC
</value>
  </data>
</root>